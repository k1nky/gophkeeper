1. Фактически сервер это просто удаленное хранилище секретов и ему не нужно знать что именно он хранит (логин-пароль, данные карты, файл и т.д.). О секрете сохраняются мета-данные (кто владелец, тип, какая-то дополнительная информация). Для сервера важен только владелец секрет, для авторизации доступа к секретам. Тип и прочее это нужно клиенту и его обязаность понять, что это за секрет. Сам секрет хранится как набор байт. Таким образом, хранилище `store` это связка MetaStore (для мета данных) и ObjectStore (данные в виде байт).
2. В качестве одного из типа хранилищ для мета данных есть boltdb (выбран из-за простоты (simple key-value) и не требует дополнительной установки (можно использовать на клиенте) ), альтернативный вариант будет postgres.
3. Хранение самих секретов ObjectStore предлагается в виде файлов.
4. MetaStore и ObjectStore на самом деле можно сделать любые, главно чтоб реализовывали интерфейс.
5. Задача шифрования лежит на клиенте, в удаленное хранилище должны попадать уже зашифрованные данные.
6. Требование к тому что данные могут быть любого размера, вызвало действительный интерес, поэтому появились DataReader, EncryptReader, DecryptReader и передача чанками в потоке grpc.
7. У сервера есть поддержка http (для произвольного клиента) и grpc (для нативного клиента). Самый простой клиент можно сделать, используя только curl и openssl.
8. Пока в мыслях считать секреты неизменяемыми, либо изменяемость только для мета-данных. Сам "секрет" (набор байт) точно будет не изменяемым.
9. Синхронизация: получить данные из удаленного хранилища и положить в локальное, положить из локального в удаленное. Решение конфиликтов планирую на стороне клиента.